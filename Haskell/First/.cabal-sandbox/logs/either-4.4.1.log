Configuring either-4.4.1...
Building either-4.4.1...
Preprocessing library either-4.4.1...
[1 of 3] Compiling Data.Either.Validation ( src/Data/Either/Validation.hs, dist/dist-sandbox-5bf6cc0d/build/Data/Either/Validation.o )

src/Data/Either/Validation.hs:32:1: Warning:
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()

src/Data/Either/Validation.hs:35:1: Warning:
    The import of ‘Data.Traversable’ is redundant
      except perhaps to import instances from ‘Data.Traversable’
    To import instances alone, use: import Data.Traversable()

src/Data/Either/Validation.hs:120:20: Warning:
    Variable ‘p’ is implicitly quantified due to a context
    Use explicit forall syntax instead.
    This will become an error in GHC 7.12.
    In the type ‘(Profunctor p, Functor f) => p a (f b) -> p s (f t)’
    In the declaration for type synonym ‘Iso’

src/Data/Either/Validation.hs:120:20: Warning:
    Variable ‘f’ is implicitly quantified due to a context
    Use explicit forall syntax instead.
    This will become an error in GHC 7.12.
    In the type ‘(Profunctor p, Functor f) => p a (f b) -> p s (f t)’
    In the declaration for type synonym ‘Iso’
[2 of 3] Compiling Data.Either.Combinators ( src/Data/Either/Combinators.hs, dist/dist-sandbox-5bf6cc0d/build/Data/Either/Combinators.o )

src/Data/Either/Combinators.hs:39:1: Warning:
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
[3 of 3] Compiling Control.Monad.Trans.Either ( src/Control/Monad/Trans/Either.hs, dist/dist-sandbox-5bf6cc0d/build/Control/Monad/Trans/Either.o )

src/Control/Monad/Trans/Either.hs:55:1: Warning:
    The import of ‘Data.Foldable’ is redundant
      except perhaps to import instances from ‘Data.Foldable’
    To import instances alone, use: import Data.Foldable()

src/Control/Monad/Trans/Either.hs:59:1: Warning:
    The import of ‘Data.Traversable’ is redundant
      except perhaps to import instances from ‘Data.Traversable’
    To import instances alone, use: import Data.Traversable()
[1 of 3] Compiling Data.Either.Validation ( src/Data/Either/Validation.hs, dist/dist-sandbox-5bf6cc0d/build/Data/Either/Validation.p_o )

src/Data/Either/Validation.hs:32:1: Warning:
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()

src/Data/Either/Validation.hs:35:1: Warning:
    The import of ‘Data.Traversable’ is redundant
      except perhaps to import instances from ‘Data.Traversable’
    To import instances alone, use: import Data.Traversable()

src/Data/Either/Validation.hs:120:20: Warning:
    Variable ‘p’ is implicitly quantified due to a context
    Use explicit forall syntax instead.
    This will become an error in GHC 7.12.
    In the type ‘(Profunctor p, Functor f) => p a (f b) -> p s (f t)’
    In the declaration for type synonym ‘Iso’

src/Data/Either/Validation.hs:120:20: Warning:
    Variable ‘f’ is implicitly quantified due to a context
    Use explicit forall syntax instead.
    This will become an error in GHC 7.12.
    In the type ‘(Profunctor p, Functor f) => p a (f b) -> p s (f t)’
    In the declaration for type synonym ‘Iso’
[2 of 3] Compiling Data.Either.Combinators ( src/Data/Either/Combinators.hs, dist/dist-sandbox-5bf6cc0d/build/Data/Either/Combinators.p_o )

src/Data/Either/Combinators.hs:39:1: Warning:
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
[3 of 3] Compiling Control.Monad.Trans.Either ( src/Control/Monad/Trans/Either.hs, dist/dist-sandbox-5bf6cc0d/build/Control/Monad/Trans/Either.p_o )

src/Control/Monad/Trans/Either.hs:55:1: Warning:
    The import of ‘Data.Foldable’ is redundant
      except perhaps to import instances from ‘Data.Foldable’
    To import instances alone, use: import Data.Foldable()

src/Control/Monad/Trans/Either.hs:59:1: Warning:
    The import of ‘Data.Traversable’ is redundant
      except perhaps to import instances from ‘Data.Traversable’
    To import instances alone, use: import Data.Traversable()
In-place registering either-4.4.1...
Running Haddock for either-4.4.1...
Preprocessing library either-4.4.1...
Warning: The documentation for the following packages are not installed. No
links will be generated to these packages: nats-1

src/Data/Either/Validation.hs:32:1: Warning:
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()

src/Data/Either/Validation.hs:35:1: Warning:
    The import of ‘Data.Traversable’ is redundant
      except perhaps to import instances from ‘Data.Traversable’
    To import instances alone, use: import Data.Traversable()

src/Data/Either/Validation.hs:120:20: Warning:
    Variable ‘p’ is implicitly quantified due to a context
    Use explicit forall syntax instead.
    This will become an error in GHC 7.12.
    In the type ‘(Profunctor p, Functor f) => p a (f b) -> p s (f t)’
    In the declaration for type synonym ‘Iso’

src/Data/Either/Validation.hs:120:20: Warning:
    Variable ‘f’ is implicitly quantified due to a context
    Use explicit forall syntax instead.
    This will become an error in GHC 7.12.
    In the type ‘(Profunctor p, Functor f) => p a (f b) -> p s (f t)’
    In the declaration for type synonym ‘Iso’

src/Data/Either/Combinators.hs:39:1: Warning:
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()

src/Control/Monad/Trans/Either.hs:55:1: Warning:
    The import of ‘Data.Foldable’ is redundant
      except perhaps to import instances from ‘Data.Foldable’
    To import instances alone, use: import Data.Foldable()

src/Control/Monad/Trans/Either.hs:59:1: Warning:
    The import of ‘Data.Traversable’ is redundant
      except perhaps to import instances from ‘Data.Traversable’
    To import instances alone, use: import Data.Traversable()
Haddock coverage:
  43% (  3 /  7) in 'Data.Either.Validation'
  Missing documentation for:
    _Success (src/Data/Either/Validation.hs:111)
    _Failure (src/Data/Either/Validation.hs:102)
    eitherToValidation (src/Data/Either/Validation.hs:132)
    validationToEither (src/Data/Either/Validation.hs:126)
 100% ( 18 / 18) in 'Data.Either.Combinators'
 100% ( 11 / 11) in 'Control.Monad.Trans.Either'
Warning: Data.Either.Validation: could not find link destinations for:
    Prism Iso
Documentation created: dist/dist-sandbox-5bf6cc0d/doc/html/either/index.html
Creating package registration file:
/var/folders/jv/m80d3qfn5tz4qyfrtyq42kc00000gn/T/pkgConf-either-4.4794014915545293947.1
Installing library in
/Users/katsuya/study/Haskell/First/.cabal-sandbox/lib/x86_64-osx-ghc-7.10.2/either-4.4.1-F5V2cxgaiCa26gkH5FRN5Z
Registering either-4.4.1...
